(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{261:function(e,r,t){"use strict";t.r(r);var n=t(5),a=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("blockquote",[t("p",[e._v("GraphQL API查询语言")])]),e._v(" "),t("p",[e._v("GraphQL本身不是数据库,Graphql只是一种用于 API 的查询语言.")]),e._v(" "),t("p",[e._v("使用场合: 后端使用了GraphQL之后，数据库查出来A,B,C,D四个字段，客户端需要数据的时候，你可以随意使用这四个字段的各种组合，无论只要A，C字段还是只要A，C，D字段等等，不再需要和服务端交流.\n::: tip\n它可以做到用一个请求能获取你所需要的所有数据\n:::")]),e._v(" "),t("h2",{attrs:{id:"入门-demo"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#入门-demo"}},[e._v("#")]),e._v(" 入门 demo")]),e._v(" "),t("p",[e._v("以下是用GraphQL.js和express-graphql搭建一个的普通GraphQL查询（query）的例子，包括讲解GraphQL的部分类型和参数，已经掌握了的同学可以跳过。")]),e._v(" "),t("ol",[t("li",[e._v("先跑个hello world")])]),e._v(" "),t("p",[e._v("新建一个graphql文件夹，然后在该目录下打开终端，执行npm init --y初始化一个packjson文件。")]),e._v(" "),t("p",[e._v("安装依赖包：npm install --save -D express express-graphql graphql")]),e._v(" "),t("p",[e._v("最近使用 yarn 感觉非常顺畅,推荐没用过 yarn 的试试.")]),e._v(" "),t("p",[e._v("新建sehema.js文件，填上下面的代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// schema.js\nconst {\n\tGraphQLSchema,\n\tGraphQLObjectType,\n\tGraphQLString,\n} = require('graphql');\n\nconst queryObj = new GraphQLObjectType({\n\tname: 'myFirstQuery',\n\tdescription: 'a hello world demo',\n\tfields: {\n\t\thello: {\n\t\t\tname: 'a hello world query',\n\t\t\tdescription: 'a hello world demo',\n\t\t\ttype: GraphQLString,\n\t\t\tresolve(parentValue, args, request){\n\t\t\t\treturn 'hello world!';\n\t\t\t}\n\t\t}\n\t}\n});\n\nmodule.exports = new GraphQLSchema({\n\tquery: queryObj\n});\n")])])]),t("p",[e._v("这里的意思是新建一个简单的查询，查询名字叫hello，会返回字段hello world !，其他的是定义名字和查询结果类型的意思。")]),e._v(" "),t("p",[e._v("同级目录下新建server.js文件，填上下面的代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("// server.js\nconst express = require('express');\nconst expressGraphql = require('express-graphql');\nconst app = express();\n\nconst schema = require('./schema');\napp.use('/graphql', expressGraphql({\n  schema,\n  graphiql: true\n}));\n\napp.get('/', (req, res) => { res.end('index') });\n\napp.listen(8000, err => {\n  if (err) {\n    throw new Error(err);\n  }\n  console.log(' server started ');\n})\n")])])]),t("p",[e._v("这部分代码是用express跑起来一个服务器，并通过express-graphql把graphql挂载到服务器上。")]),e._v(" "),t("p",[e._v('修改 package.json --\x3e "main": "server.js" ,运行一下node server，并打开http://localhost:8000/')]),e._v(" "),t("p",[e._v("如果显示 index 说明成功了,打开http://localhost:8000/graphql 如下:")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://6c6f-love-forever-oo-i88xz-1300941191.tcb.qcloud.la/pictureBed/blog/showGraphqlPage.jpg",alt:"graphql"}})]),e._v(" "),t("h2",{attrs:{id:"参考资料"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[e._v("#")]),e._v(" 参考资料")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://mp.weixin.qq.com/s?src=11&timestamp=1567669636&ver=1833&signature=ZWlUVLqkjryZvPGIiJC3Q*uqvhqk7fQNfpjKM1WB-CGwo-TA7QXAy6izynqI1jeKgQ*kdsoB3VbBSDjLlUC50R03JVmFUbcA5J7J*XIB9TJSrFaSnttjLn-IvxnS829z&new=1",target:"_blank",rel:"noopener noreferrer"}},[e._v("手把手教你GraphQL快速入门"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("a",{attrs:{href:"http://www.imooc.com/article/292066",target:"_blank",rel:"noopener noreferrer"}},[e._v("GraphQL 从入门到实践"),t("OutboundLink")],1)])])}),[],!1,null,null,null);r.default=a.exports}}]);